{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AllAuctionsResponse",
  "type": "object",
  "required": [
    "auctions"
  ],
  "properties": {
    "auctions": {
      "type": "array",
      "items": {
        "type": "array",
        "items": [
          {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          {
            "$ref": "#/definitions/AuctionResponse"
          }
        ],
        "maxItems": 2,
        "minItems": 2
      }
    }
  },
  "definitions": {
    "AuctionResponse": {
      "type": "object",
      "required": [
        "creator",
        "end_time",
        "nft_contract",
        "nft_id",
        "private_sale",
        "resolved",
        "start_time",
        "total_bids"
      ],
      "properties": {
        "charity": {
          "anyOf": [
            {
              "$ref": "#/definitions/CharityResponse"
            },
            {
              "type": "null"
            }
          ]
        },
        "creator": {
          "type": "string"
        },
        "end_time": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "highest_bid": {
          "anyOf": [
            {
              "$ref": "#/definitions/Uint128"
            },
            {
              "type": "null"
            }
          ]
        },
        "highest_bidder": {
          "type": [
            "string",
            "null"
          ]
        },
        "instant_buy": {
          "anyOf": [
            {
              "$ref": "#/definitions/Uint128"
            },
            {
              "type": "null"
            }
          ]
        },
        "nft_contract": {
          "type": "string"
        },
        "nft_id": {
          "type": "string"
        },
        "private_sale": {
          "type": "boolean"
        },
        "reserve_price": {
          "anyOf": [
            {
              "$ref": "#/definitions/Uint128"
            },
            {
              "type": "null"
            }
          ]
        },
        "resolved": {
          "type": "boolean"
        },
        "start_price": {
          "anyOf": [
            {
              "$ref": "#/definitions/Uint128"
            },
            {
              "type": "null"
            }
          ]
        },
        "start_time": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "total_bids": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "CharityResponse": {
      "type": "object",
      "required": [
        "address",
        "fee_percentage"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "fee_percentage": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
